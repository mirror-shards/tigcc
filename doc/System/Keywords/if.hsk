[Main]
Keywords=if, else

[Description]
Conditional statement.

[Explanation]
Keyword <CODE>if</CODE> is used for conditional execution. The basic form of <CODE>if</CODE>
uses the following syntax:
<PRE>if (<I>expression</I>)
   <I>statement1</I>
</PRE>
Alternatively, <CODE>if</CODE> may be used together with <CODE>else</CODE>, using the
following syntax:
<PRE>if (<I>expression</I>)
   <I>statement1</I>
else
   <I>statement2</I>
</PRE>
If <I>expression</I> is nonzero when evaluated, then <I>statement1</I> is executed. In
the second case, <I>statement2</I> is executed if the expression is 0.
<BR><BR>
An optional <CODE>else</CODE> can follow an <CODE>if</CODE> statement, but no statements can come
between an <CODE>if</CODE> statement and an <CODE>else</CODE>. Of course, both
<I>statement1</I> and <I>statement2</I> may be compound statements (i.e. a sequence of
statements enclosed in braces). Here will be given some legal examples:
<PRE>if (count &lt; 50) count++;

if (x &lt; y) z = x;
else z = y;

if (x &lt; y)
  {
    printf ("x is smaller");
    return x;
  }
else
  {
    printf ("x is greater")
    return y;
  }
</PRE>
The <A HREF="$$INFOLINK(cpp/SEC34)">#if</A> and
<A HREF="$$INFOLINK(cpp/SEC35)">#else</A> preprocessor statements look similar to the
<CODE>if</CODE> and <CODE>else</CODE> statements, but have very different effects.
They control which source file lines are compiled and which are ignored.
