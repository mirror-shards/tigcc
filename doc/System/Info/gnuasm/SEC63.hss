[Main]
Title=Arguments

[Top]
<U>Arguments</U> are symbols, numbers or subexpressions.  In other
contexts arguments are sometimes called &quot;arithmetic operands&quot;.  In
this manual, to avoid confusing them with the &quot;instruction operands&quot; of
the machine language, we use the term &quot;argument&quot; to refer to parts of
expressions only, reserving the word &quot;operand&quot; to refer only to machine
instruction operands.
<BR><BR>
Symbols are evaluated to yield {<I>section</I> <I>NNN</I>} where
<I>section</I> is one of text, data, bss, absolute,
or undefined.  <I>NNN</I> is a signed, 2's complement 32 bit
integer.
<BR><BR>
Numbers are usually integers.
In principle, a number can be a flonum or bignum.  In this case, you are warned
that only the low order 32 bits are used, and <CODE>as</CODE> pretends
these 32 bits are an integer.  You may write integer-manipulating
instructions that act on exotic constants, compatible with other
assemblers.
<BR><BR>
Subexpressions are a left parenthesis <CODE>(</CODE> followed by an integer
expression, followed by a right parenthesis <CODE>)</CODE>; or a prefix
operator followed by an argument.
