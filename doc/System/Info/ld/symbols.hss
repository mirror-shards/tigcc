[Main]
Title=Symbols Built into the TIGCC Linker
Subsections=symbols_rom_call, symbols_ti_ams_api, symbols_ram_call, symbols_extra_ram_addr, symbols_lib_call, symbols_ld_calc_const, symbols_ld_entry_point, symbols_ld_entry_point_plus_0x8000, symbols_ld_program_size, symbols_ld_constructors_start, symbols_ld_constructors_end, symbols_ld_constructors_size, symbols_ld_constructor_count, symbols_ld_destructors_start, symbols_ld_destructors_end, symbols_ld_destructors_size, symbols_ld_destructor_count, symbols_ld_reloc_count, symbols_ld_data_start, symbols_ld_data_end, symbols_ld_data_size, symbols_ld_data_ref_count, symbols_ld_bss_start, symbols_ld_bss_end, symbols_ld_bss_size, symbols_ld_bss_ref_count, symbols_ld_rom_call_count, symbols_ld_ram_call_count, symbols_ld_lib_count, symbols_ld_referenced_lib_count, symbols_ld_export_count, symbols_ld_nostub_comment_count, symbols_ld_has, symbols_ld_file_version, symbols_ld_kernel_flags, symbols_ld_kernel_bss_table, symbols_ld_kernel_export_table, symbols_ld_data_var_name_end, symbols_ld_hardware_id, symbols_exit, symbols_comment, symbols_extraram, symbols_library

[Top]
The TIGCC linker is capable of resolving references to certain built-in
symbols. These symbols act just like normal externally defined symbols; for
example, it is possible to specify an offset to be added to the symbol in the
reference. The symbols may resolve to numbers or addresses. The kind of
symbol should be obvious for each individual symbol; for example, it does not
make sense to jump to <A HREF="$$LINK(symbols_ld_bss_size)">__ld_bss_size</A>
because it resolves to a number. All numbers have to be used as immediate
values; if a symbol resolves to a number, treating it as an address and
reading the value at this address will return garbage.
<BR><BR>
The following symbol names are treated as built-in symbol names, and resolved
in a special way:
