[Main]
Name=gdb_recall
Type=Function
Subtype=ROM Call
Header Files=graphing.h
Definition=void gdb_recall (HSym var);

[ROM Call]
Index=$1E2

[Description]
Actual core of <A HREF="$$LINK(bascmd.h/cmd_rclgdb)">cmd_rclgdb</A>.

[Explanation]
This is the routine which retrieves the current GDB from the variable described by <I>var</I>.<BR>
This routine is wrapped by <A HREF="$$LINK(bascmd.h/cmd_rclgdb)">cmd_rclgdb</A>, which is 
basically a combination of <A HREF="$$LINK(vat.h/VarRecall)">VarRecall</A> and gdb_recall, so 
there's no point in using gdb_recall directly.

[References]
In=unknown.h/GT_Open, bascmd.h/cmd_rclgdb
Out=gr_active, gr_other, rngLen, alloc.h/HeapAlloc, alloc.h/HeapAllocThrow, alloc.h/HeapFreeIndir, alloc.h/HeapLock, alloc.h/HeapUnlock, error.h/ER_catch, error.h/ER_success, error.h/ER_throwVar, estack.h/HToESI, events.h/MO_currentOptions, events.h/MO_digestOptions, mem.h/memcpy, unknown.h/CreateEmptyList, unknown.h/FindGrFunc, unknown.h/gen_version, unknown.h/gr_DelFolder, unknown.h/gr_initCondName, unknown.h/grFuncName, vat.h/DerefSym, vat.h/HSymDel, vat.h/SymFindMain, vat.h/VarStore, wingraph.h/WinClr, wingraph.h/WinLineNC, wingraph.h/WinPixSet
Out_EV_eventLoop=1
