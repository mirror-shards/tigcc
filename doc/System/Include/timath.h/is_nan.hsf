[Main]
Name=is_nan
Type=Function
Subtype=ROM Call
Header Files=math.h, timath.h
Definition=short is_nan (float x);
Attributes=__attribute__((__const__))
MinAMS=1.01

[ROM Call]
Index=$306

[Description]
Checks whether the argument is Not_a_Number.

[Explanation]
is_nan returns <A HREF="$$LINK(alloc.h/Bool)">TRUE</A> if <I>x</I> is <A HREF="$$LINK(NAN)">NAN</A>
(Not_a_Number), else returns <A HREF="$$LINK(alloc.h/Bool)">FALSE</A>. Not_a_Number is a special
value which is produced as a result of all operations when the result is undefined
or non-real, for example dividing zero with zero, calculating the logarithm of
a negative number, etc.

[References]
In=cacos, casin, cln, cosh, float_class, fmod, is_transfinite, itrig, sinh, tanh, basfunc.h/did_push_anti_deriv, basfunc.h/push_1st_derivative, basfunc.h/push_abs, basfunc.h/push_csolve, basfunc.h/push_czeros, basfunc.h/push_def_int, basfunc.h/push_desolve, basfunc.h/push_lim, basfunc.h/push_max, basfunc.h/push_min, basfunc.h/push_nsolve, basfunc.h/push_solve, basfunc.h/push_zeros, basop.h/did_push_to_polar, basop.h/push_equals, basop.h/push_exponentiate, basop.h/push_greater_than, basop.h/push_greater_than_or_equals, basop.h/push_less_than, basop.h/push_less_than_or_equals, basop.h/push_not_equals, basop.h/push_to_cylin, estack.h/push_Float, unknown.h/did_push_approx_inflection_point, unknown.h/get_ub, unknown.h/GM_Intersect, unknown.h/GM_Math1, unknown.h/GT_Trace, unknown.h/Regraph, unknown.h/replace_top_with_post_simplified
Out=unknown.h/_bcd_math
