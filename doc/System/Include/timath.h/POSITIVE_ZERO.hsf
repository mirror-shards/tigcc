[Main]
Name=POSITIVE_ZERO
Type=Constant
Subtype=Pseudo-constant
Header Files=math.h, timath.h
Real Definition=#define POSITIVE_ZERO (1.e-8192*1.e-8192)

[Description]
Represents an infinitely small quantity which is known to be always non-negative.

[Explanation]
In opposite to <A HREF="$$LINK(UNSIGNED_ZERO)">UNSIGNED_ZERO</A>, <CODE>POSITIVE_ZERO</CODE> is an infinitely
small quantity which is known to be always non-negative. It can be imagined as "the
smallest positive real number", altough something like this does not exist in reality.
TIOS generates <CODE>POSITIVE_ZERO</CODE> in cases when the result is zero, but it is known that the
result can not be negative for any argument. For example, squaring of <A HREF="$$LINK(ZERO)">ZERO</A>
using <A HREF="$$LINK(pow)">pow</A> function will return <CODE>POSITIVE_ZERO</CODE>, because the square is
always non-negative. The same is true for <A HREF="$$LINK(acosh)">acosh</A> when the argument
is equal to 1, etc.
<BR><BR>
TIOS also generates <CODE>POSITIVE_ZERO</CODE> as the result of positive underflow (i.e. when the
result is positive, but too small to be represented in a <CODE>float</CODE> type),
and as the result of rounding extremely small positive numbers using
<A HREF="$$LINK(round14)">round14</A> or <A HREF="$$LINK(round12_err)">round12_err</A>.
To check whether a value is a positive zero, use <A HREF="$$LINK(is_pzero)">is_pzero</A>.
<BR><BR>
Dividing any finite strictly positive number by <A HREF="$$LINK(POSITIVE_INF)">POSITIVE_INF</A>
will produce <CODE>POSITIVE_ZERO</CODE> as the result. Dividing any finite strictly positive number by
POSITIVE_ZERO gives <A HREF="$$LINK(POSITIVE_INF)">POSITIVE_INF</A>, and dividing any finite
strictly negative number by <CODE>POSITIVE_ZERO</CODE> gives <A HREF="$$LINK(NEGATIVE_INF)">NEGATIVE_INF</A>.
<BR><BR>
<B>Note:</B> Try in TI Basic <CODE>'1/0'</CODE> and <CODE>'1/0^2'</CODE> to see that
<CODE>'0'</CODE> and <CODE>'0^2'</CODE> are not strictly the same
for TIOS. Clever, isn't it?
