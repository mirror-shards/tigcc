[Main]
Name=pow
Type=Function
Subtype=ROM Call
Header Files=math.h, timath.h
Definition=float pow (float x, float y);
Attributes=__attribute__((__const__))

[ROM Call]
Index=$103

[Description]
Floating point power function.

[Explanation]
pow returns <I>x</I>^<I>y</I>, <I>x</I> to the <I>y</I> (i.e. <I>x</I> raised to the
<I>y</I>-th power).
<BR><BR>
<B>Note:</B> pow will return an infinite result (see <A HREF="$$LINK(POSITIVE_INF)">POSITIVE_INF</A>,
<A HREF="$$LINK(NEGATIVE_INF)">NEGATIVE_INF</A>, <A HREF="$$LINK(UNSIGNED_INF)">UNSIGNED_INF</A>)
in a case of overflow. If both <I>x</I> and <I>y</I> are zeros, pow will return 1.
If <I>x</I> is negative, the correct result will be produced only if <I>y</I> can
be represented as a whole number, or as a fraction with odd denominator; otherwise,
pow will return a garbage (not <A HREF="$$LINK(NAN)">NAN</A>) which sometimes even not
satisfy the floating point BCD format (digits greater than 9 etc.), so be careful in
a case when <I>x</I> is negative!

[References]
In=cacos, casin, catan, basop.h/push_pow, unknown.h/de_loop
Out=unknown.h/_bcd_math
