[Main]
Name=cmd_pxlcircle
Type=Function
Subtype=ROM Call
Header Files=bascmd.h
Definition=void cmd_pxlcircle (CESI y, CESI x, CESI radius, CESI drawmode);
MinAMS=1.01
See Also=cmd_circle, graph.h/DrawClipEllipse

[ROM Call]
Index=$377

[Description]
Executes TI-Basic 'PxlCircle' command.

[Explanation]
cmd_pxlcircle displays the Graph Screen and draws, erases, or inverts a circle
on it. The parameters <I>y</I>, <I>x</I>, <I>radius</I> and <I>drawmode</I>
should point to four integer items on the expression stack, which represent
respectively the coordinates of the center of the circle (note that the order
of <I>x</I> and <I>y</I> is swapped), the radius, and the drawing mode. The
coordinates are absolute pixel coordinates (independent of the current window
settings), where (0,0) is the top left corner of the Graph Screen, excluding
the menu area. The radius is also measured in pixels. The parameter
<I>drawmode</I> should point to one of the following values:
<BR><BR>
<TABLE BORDER CELLPADDING="3">
<TR><TD VALIGN="TOP">1</TD><TD>Draws the circle.</TD></TR>
<TR><TD VALIGN="TOP">0</TD><TD>Erases the circle.</TD></TR>
<TR><TD VALIGN="TOP">-1</TD><TD>Inverts pixels along the circle.</TD></TR>
</TABLE>
<BR>
See also <A HREF="$$LINK(cmd_circle)">cmd_circle</A>, which uses
window-relative coordinates, and
<A HREF="$$LINK(graph.h/DrawClipEllipse)">DrawClipEllipse</A> for much faster
low-level circle/ellipse drawing (independently of the Graph Screen).

[References]
Out=estack.h/GetValue, graphing.h/gr_active, unknown.h/GraphActivate, wingraph.h/WinAttr, wingraph.h/WinEllipse
