[Main]
Name=cmd_logistic
Type=Function
Subtype=ROM Call
Header Files=bascmd.h
Definition=void cmd_logistic (ESI RegData);
MinAMS=1.01
See Also=cmd_linreg, cmd_quadreg, cmd_cubicreg, cmd_quartreg, cmd_powerreg, cmd_expreg, cmd_lnreg, cmd_sinreg, cmd_onevar, cmd_twovar, cmd_medmed

[ROM Call]
Index=$360

[Description]
Executes TI-Basic 'Logistic' command.

[Explanation]
cmd_logistic calculates a logistic regression and updates all statistics
variables (see TI-Basic manual for more info). The <I>RegData</I> parameter
must point to a structure on the expression stack which describes where the
actual data is stored. This structure may have one of the following eight
layouts (<I>RegData</I> should point to the last item):
<BR><BR>
<TABLE BORDER CELLPADDING="2">
  <TR><TD><A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <I>y_list_name</I> <I>x_list_name</I></TD></TR>
  <TR><TD><A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <I>iterations</I> <I>y_list_name</I> <I>x_list_name</I></TD></TR>
  <TR><TD><A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <I>freqs_name</I> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <I>y_list_name</I> <I>x_list_name</I></TD></TR>
  <TR><TD><A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <I>freqs_name</I> <I>iterations</I> <I>y_list_name</I> <I>x_list_name</I></TD></TR>
  <TR><TD><A HREF="$$LINK(estack.h/Tags)">END_TAG</A> <I>categories_list</I> <A HREF="$$LINK(estack.h/Tags)">LIST_TAG</A> <I>categories_name</I> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <I>y_list_name</I> <I>x_list_name</I></TD></TR>
  <TR><TD><A HREF="$$LINK(estack.h/Tags)">END_TAG</A> <I>categories_list</I> <A HREF="$$LINK(estack.h/Tags)">LIST_TAG</A> <I>categories_name</I> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <I>iterations</I> <I>y_list_name</I> <I>x_list_name</I></TD></TR>
  <TR><TD><A HREF="$$LINK(estack.h/Tags)">END_TAG</A> <I>categories_list</I> <A HREF="$$LINK(estack.h/Tags)">LIST_TAG</A> <I>categories_name</I> <I>freqs_name</I> <A HREF="$$LINK(estack.h/Tags)">NOTHING_TAG</A> <I>y_list_name</I> <I>x_list_name</I></TD></TR>
  <TR><TD><A HREF="$$LINK(estack.h/Tags)">END_TAG</A> <I>categories_list</I> <A HREF="$$LINK(estack.h/Tags)">LIST_TAG</A> <I>categories_name</I> <I>freqs_name</I> <I>iterations</I> <I>y_list_name</I> <I>x_list_name</I></TD></TR>
</TABLE>
<BR>
<I>x_list_name</I> is the VAT symbol name (see
<A HREF="$$LINK(vat.h/SYMSTR)">SYMSTR</A> and
<A HREF="$$LINK(estack.h/Tags)">Tags</A> for more info) of a TI-Basic list
variable which contains the x values. <I>y_list_name</I> is the VAT symbol
name of a TI-Basic list variable which contains the y values.
<I>iterations</I> is an integer expression; if it is omitted, 64 is assumed.
It specifies the maximum number of iterations in which a solution will be
attempted (larger values result in better accuracy but longer execution
times, and vice versa). <I>freqs_name</I> (if present) is the VAT symbol name
of a TI-Basic list variable which contains the frequencies (all frequencies
are assumed to be 1 if <I>freqs_name</I> is not present).
<I>categories_name</I> (if present) is the VAT symbol name of a TI-Basic list
which contains the category of each item. <I>categories_list</I> represents
a list of integer items determining which categories will be included (this
makes sense only when <I>categories_name</I> is used).
<BR><BR>
See <A HREF="$$LINK(cmd_linreg)">cmd_linreg</A> for more information.

[References]
Out=alloc.h/HeapAlloc, alloc.h/HeapDeref, alloc.h/HeapFree, alloc.h/HeapFreeIndir, alloc.h/HeapRealloc, alloc.h/HLock, error.h/ER_catch, error.h/ER_success, error.h/ER_throwVar, estack.h/estack_to_ushort, estack.h/next_expression_index, statline.h/ST_helpMsg, system.h/XR_stringPtr, timath.h/ceil, timath.h/fabs, timath.h/floor, timath.h/sqrt, unknown.h/ck_valid_float, unknown.h/estack_to_float, unknown.h/is_cFloat_agg, unknown.h/OO_GetAppAttr, unknown.h/PlotInit, unknown.h/PlotPut, unknown.h/RM_Type, unknown.h/statFree, unknown.h/statStart, wingraph.h/MakeWinRect, wingraph.h/WinFill, wingraph.h/WinFillTriangle, wingraph.h/WinLine, wingraph.h/WinRect, wingraph.h/WinStrXY, unknown.h/_bcd_math, unknown.h/_ROM_CALL_46B, unknown.h/_ROM_CALL_4CB
Out_EV_eventLoop=1
