[Main]
Name=cmd_pxlline
Type=Function
Subtype=ROM Call
Header Files=bascmd.h
Definition=void cmd_pxlline (CESI y1, CESI x1, CESI y2, CESI x2, CESI drawmode);
MinAMS=1.01
See Also=cmd_line, graph.h/DrawLine, graph.h/DrawClipLine, cmd_pxlcircle, cmd_pxlhorz, cmd_pxlvert, cmd_pxlon, cmd_pxloff, cmd_pxlchg

[ROM Call]
Index=$379

[Description]
Executes TI-Basic 'PxlLine' command.

[Explanation]
cmd_pxlline displays the Graph Screen and draws, erases, or inverts a line
segment on it.
The parameters <I>y1</I>, <I>x1</I>, <I>y2</I>, <I>x2</I>, and
<I>drawmode</I> should point to five integer items on the expression stack,
which represent respectively the coordinates of the starting point (note that
the order of x and y coordinates is swapped), the ending point, and the
drawing mode. The coordinates are absolute pixel coordinates (independent of
the current window settings), where (0,0) is the top left corner of the Graph
Screen, excluding the menu area. The parameter <I>drawmode</I> should
point to one of the following values:
<BR><BR>
<TABLE BORDER CELLPADDING="3">
<TR><TD VALIGN="TOP">1</TD><TD>Draws the line.</TD></TR>
<TR><TD VALIGN="TOP">0</TD><TD>Erases the line.</TD></TR>
<TR><TD VALIGN="TOP">-1</TD><TD>Inverts pixels along the line.</TD></TR>
</TABLE>
<BR>
See also <A HREF="$$LINK(cmd_line)">cmd_line</A>, which uses window-relative
coordinates, and <A HREF="$$LINK(graph.h/DrawLine)">DrawLine</A> (or
<A HREF="$$LINK(graph.h/DrawClipLine)">DrawClipLine</A>) for much faster
low-level line drawing (independently of the Graph Screen).
Graph Screen).

[References]
Out=estack.h/GetValue, graphing.h/gr_active, unknown.h/GraphActivate, wingraph.h/MakeWinRect, wingraph.h/WinAttr, wingraph.h/WinLine
