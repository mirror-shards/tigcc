[Main]
Name=cmd_for
Type=Function
Subtype=ROM Call
Header Files=bascmd.h
Definition=void cmd_for (SYM_STR VarName, CESI start, CESI end, CESI step);
MinAMS=1.01
See Also=cmd_endfor

[ROM Call]
Index=$34F

[Description]
Executes TI-Basic 'For' command.

[Explanation]
This is an internal subroutine used by TI-Basic interpreter for initializing
a counter variable used in a 'For'...'EndFor' loop.
As this function depends heavily on some system state variables of the TI-Basic
intepreter which are not set correctly while executing an ASM program, it
is extremely unlikely that this function may be used inside a C program for
anything useful.
<BR><BR>
<B>Note:</B> See the <CODE><A HREF="$$INFOLINK(keywords/for)">for</A></CODE>
keyword to learn how to use loops in C language which are similar to
For...EndFor loops in TI-Basic.

[References]
Out=basop.h/push_difference, estack.h/is_narrowly_independent_of, estack.h/next_expression_index, estack.h/top_estack, unknown.h/assign_between, unknown.h/divide_top, unknown.h/index_after_match_endtag, estack.h/is_negative, estack.h/is0, unknown.h/primary_tag_list, unknown.h/_ROM_CALL_5C8
Out_EV_eventLoop=1
