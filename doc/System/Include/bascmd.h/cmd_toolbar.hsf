[Main]
Name=cmd_toolbar
Type=Function
Subtype=ROM Call
Header Files=bascmd.h
Definition=void cmd_toolbar (void);
MinAMS=1.01
See Also=cmd_custom, cmd_custmon, cmd_popup, menus.h/

[ROM Call]
Index=$395

[Description]
Executes TI-Basic 'Toolbar' command.

[Explanation]
cmd_toolbar is an internal subroutine used by the TI-Basic interpreter for
defining toolbar menus using 'ToolBar'...'EndTBar' blocks.
As this function depends heavily on some system state variables of the
TI-Basic intepreter which are not set correctly while executing an ASM
program, it is extremely unlikely that this function may be used inside a C
program for anything useful.
<BR><BR>
<B>Note:</B> See functions from <A HREF="$$LINK(menus.h/)">menus.h</A> if you
want to make toolbar menus inside a C program.

[References]
Out=cmd_goto, alloc.h/HeapAllocThrow, alloc.h/HeapFreeIndir, alloc.h/HLock, error.h/ER_catch, error.h/ER_success, error.h/ER_throwVar, estack.h/HToESI, estack.h/next_expression_index, estack.h/top_estack, kbd.h/GKeyIn, menus.h/FKeyI_H, menus.h/MenuAddIcon, menus.h/MenuAddText, menus.h/MenuBegin, menus.h/MenuEnd, menus.h/MenuKey, menus.h/MenuNew, menus.h/MenuUpdate, string.h/strlen, system.h/NeedStack, unknown.h/CustomFree, estack.h/push_simplify, unknown.h/ReallocExprStruct, vat.h/DerefSym, vat.h/VarRecall, unknown.h/_ROM_CALL_5C8
Out_EV_eventLoop=1
