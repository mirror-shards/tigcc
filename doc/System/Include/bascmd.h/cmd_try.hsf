[Main]
Name=cmd_try
Type=Function
Subtype=ROM Call
Header Files=bascmd.h
Definition=void cmd_try (void);
MinAMS=1.01
See Also=cmd_endtry, cmd_clrerr, cmd_passerr, error.h/

[ROM Call]
Index=$397

[Description]
Executes TI-Basic 'Try' command.

[Explanation]
cmd_try is an internal subroutine used by the TI-Basic interpreter for
initializing an error-protected block ('Try'...'EndTry').
As this function depends heavily on some system state variables of the
TI-Basic intepreter which are not set correctly while executing an ASM
program, it is extremely unlikely that this function may be used inside a C
program for anything useful.
<BR><BR>
<B>Note:</B> See <A HREF="$$LINK(error.h/TRY)">TRY</A>,
<A HREF="$$LINK(error.h/ONERR)">ONERR</A>, and
<A HREF="$$LINK(error.h/ENDTRY)">ENDTRY</A> to learn how to take control over
errors while executing a C program.

[References]
Out=error.h/ER_catch, error.h/ER_success, error.h/ER_throwVar, estack.h/bottom_estack, estack.h/next_expression_index, estack.h/push_Float, estack.h/reset_estack_size, estack.h/top_estack, unknown.h/index_after_match_endtag, unknown.h/push_simplify_statements, vat.h/VarStore, unknown.h/_bcd_math, unknown.h/_ROM_CALL_5C5, unknown.h/_ROM_CALL_5C7, unknown.h/_ROM_CALL_5C8
Out_EV_eventLoop=1
