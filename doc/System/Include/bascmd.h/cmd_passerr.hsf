[Main]
Name=cmd_passerr
Type=Function
Subtype=ROM Call
Header Files=bascmd.h
Definition=void cmd_passerr (void);
MinAMS=1.01
See Also=cmd_try, cmd_clrerr, cmd_exit, cmd_return

[ROM Call]
Index=$36A

[Description]
Executes TI-Basic 'PassErr' command.

[Explanation]
cmd_passerr does nothing if the TI-Basic system variable 'errornum' is equal
to zero, else it throws an error (using the
<A HREF="$$LINK(error.h/ER_throwVar)">ER_throwVar</A> function) whose number
is equal to the value of the system variable "errornum".
<BR><BR>
<B>Note:</B> See <A HREF="$$LINK(error.h/TRY)">TRY</A>,
<A HREF="$$LINK(error.h/ONERR)">ONERR</A>, and
<A HREF="$$LINK(error.h/ENDTRY)">ENDTRY</A> to learn how to take control over
errors while executing a C program.

[References]
Out=error.h/ER_throwVar, estack.h/top_estack, unknown.h/does_push_fetch, unknown.h/estack_to_float, estack.h/is0, vat.h/DerefSym, vat.h/VarRecall, unknown.h/_bcd_math
Out_EV_eventLoop=1
