[Main]
Name=SymFindHome
Type=Function
Subtype=ROM Call
Header Files=vat.h
Definition=HSym SymFindHome (SYM_STR SymName);
See Also=SymFind

[ROM Call]
Index=$62

[Description]
Finds a folder.

[Explanation]
SymFindHome searches the folder table part of variable allocation table (VAT)
for a folder named <I>SymName</I> (in fact, it searches through a
pseudo-folder called "home", which contains all other folders).
SymFindHome returns a structure of type <A HREF="$$LINK(HSym)">HSym</A>,
which contains the handle of the folder table list of the VAT, and the offset
from the beginning of the list to the actual VAT symbol entry. Use
<A HREF="$$LINK(DerefSym)">DerefSym</A> to get a pointer to the actual VAT
symbol entry instead. In case of an error (for example, if the folder does
not exist), SymFindHome returns <A HREF="$$LINK(HS_NULL)">HS_NULL</A>.
<BR><BR>
<B>Note:</B> I don't know what kernels do to find the handle of the folder
list, but as far as I know, the only legal method is the following:
<PRE>FolderListHandle = SymFindHome(SYMSTR("main")).folder;
</PRE>

[References]
In=bascmd.h/cmd_delfold
Out=MakeHSym, SymCmp, unknown.h/ParseSymName, unknown.h/_mu16u16
