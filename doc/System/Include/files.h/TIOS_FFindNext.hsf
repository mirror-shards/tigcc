[Main]
Name=FFindNext
Type=Function
Subtype=ROM Call
Header Files=files.h
Definition=SYM_ENTRY *FFindNext (void);
MinAMS=2.00
See Also=TIOS_FFindFirst: FFindFirst, vat.h/SymFindFolderName

[ROM Call]
Index=$3DA

[Description]
Find the next symbol as set up by a call to <A HREF="$$LINK(TIOS_FFindFirst)">FFindFirst</A>.

[Explanation]
FFindNext finds the next symbol as set up by a call to <A HREF="$$LINK(TIOS_FFindFirst)">FFindFirst</A> and returns a
<A HREF="$$LINK(vat.h/SYM_ENTRY)">SYM_ENTRY</A> pointer to it, or <A HREF="$$LINK(alloc.h/NULL)">NULL</A> if no more symbols can be found.<BR>
The pointer returned by FFindNext is a <A HREF="$$LINK(vat.h/SYM_ENTRY)">SYM_ENTRY</A> pointer to a file with a type matching the one set up by a previous
call to <A HREF="$$LINK(TIOS_FFindFirst)">FFindFirst</A>. If using FO_RECURSE, then calling
<A HREF="$$LINK(vat.h/SymFindFolderName)">SymFindFolderName</A> will return the folder of the symbol just found.<BR>
Note that <A HREF="$$LINK(TIOS_FFindFirst)">FFindFirst</A> must have been called previously to find the first symbol.
<BR><BR>
<B>Note:</B> <A HREF="$$LINK(vat.h/SYM_ENTRY)">SYM_ENTRY</A> pointers are only valid until heap compression is done or
another symbol is added to the symbol table.

[References]
In=TIOS_FFindFirst: FFindFirst
Out=estack.h/HToESI, string.h/strcmp, unknown.h/_ROM_CALL_3E8, vat.h/SymFindNext
