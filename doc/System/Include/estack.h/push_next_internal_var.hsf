[Main]
Name=push_next_internal_var
Type=Function
Subtype=ROM Call
Header Files=estack.h
Definition=void push_next_internal_var (ESQ Tag);
MinAMS=1.01

[ROM Call]
Index=$2ED

[Description]
Pushes an internal variable to the expression stack.

[Explanation]
push_next_internal_var is an auxilary function used in calculus operations. It
pushes the sequence 0,&nbsp;<I>Tag</I>+1,&nbsp;<I>count</I>,&nbsp;0 to the
expression stack, where <I>count</I> is the internal counter of internal
variables. Then, the counter is increased by one. TIOS usually passes 0 or 1
for <I>Tag</I>, so it manages a two independent sets of internal variables.
You can see that internal variable names consist of two bytes (see
<A HREF="$$LINK(Tags)">VAR_NAME_TAG</A>): one byte is "set number", and another byte
is "number of a variable in the set".

[References]
In=basfunc.h/did_push_anti_deriv, basfunc.h/push_1st_derivative, basfunc.h/push_csolve, basfunc.h/push_czeros, basfunc.h/push_def_int, basfunc.h/push_desolve, basfunc.h/push_factor, basfunc.h/push_lim, basfunc.h/push_max, basfunc.h/push_min, basfunc.h/push_nint, basfunc.h/push_nsolve, basfunc.h/push_solve, basfunc.h/push_zeros, basop.h/push_equals, basop.h/push_greater_than, basop.h/push_greater_than_or_equals, basop.h/push_less_than, basop.h/push_less_than_or_equals, basop.h/push_not_equals, unknown.h/get_ub
Out=push_quantum_pair, unknown.h/_ROM_CALL_5C4
