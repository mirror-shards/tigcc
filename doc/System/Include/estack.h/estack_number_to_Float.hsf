[Main]
Name=estack_number_to_Float
Type=Function
Subtype=ROM Call
Header Files=estack.h
Definition=float estack_number_to_Float (CESI ptr);
Attributes=__attribute__((__pure__))
MinAMS=1.01

[ROM Call]
Index=$2F9

[Description]
Converts entry on the expression stack to floating point number.

[Explanation]
estack_number_to_Float converts an entry on the expression stack pointed to by
<I>ptr</I> (it needs to point to the entry tag) to a floating point value
and returns the result. Note that the entry need not be represented by
<A HREF="$$LINK(Tags)">FLOAT_TAG</A>: it also may be represented by an integer, or
by a fraction. This function does not remove the entry from the stack.
<BR><BR>
<B>Note:</B> estack_number_to_Float will throw an error if the entry on the stack is not
a floating point number, a fraction or an integer, so you will need to use
<A HREF="$$LINK(error.h/ER_catch)">ER_catch</A> to catch eventual errors.

[References]
In=compare_complex_magnitudes, push_round_Float, basfunc.h/did_push_anti_deriv, basfunc.h/did_push_series, basfunc.h/push_1st_derivative, basfunc.h/push_comb, basfunc.h/push_comdenom, basfunc.h/push_csolve, basfunc.h/push_czeros, basfunc.h/push_def_int, basfunc.h/push_denominator, basfunc.h/push_desolve, basfunc.h/push_exp, basfunc.h/push_expand, basfunc.h/push_factor, basfunc.h/push_floor, basfunc.h/push_im, basfunc.h/push_integer_lcm, basfunc.h/push_is_prime, basfunc.h/push_lim, basfunc.h/push_max, basfunc.h/push_min, basfunc.h/push_mod, basfunc.h/push_nsolve, basfunc.h/push_nth_derivative, basfunc.h/push_numerator, basfunc.h/push_phase, basfunc.h/push_rand, basfunc.h/push_re, basfunc.h/push_sin2, basfunc.h/push_solve, basfunc.h/push_tan, basfunc.h/push_zeros, basop.h/did_push_to_polar, basop.h/push_equals, basop.h/push_exponentiate, basop.h/push_greater_than, basop.h/push_greater_than_or_equals, basop.h/push_less_than, basop.h/push_less_than_or_equals, basop.h/push_negate, basop.h/push_not_equals, basop.h/push_product, basop.h/push_ratio, basop.h/push_sum, basop.h/push_to_cylin, basop.h/push_to_sphere, timath.h/atof, add_to_top, unknown.h/are_units_consistent, unknown.h/compare_numbers, unknown.h/divide_top, unknown.h/get_ub, unknown.h/index_if_pushed_qquad_info, unknown.h/push_auto_units_conversion, unknown.h/push_but_factor, unknown.h/push_but_term, unknown.h/push_constant_factors, unknown.h/push_constant_terms, unknown.h/push_dependent_factors, unknown.h/push_dependent_terms, basfunc.h/push_div_dif_1c, unknown.h/push_gcd_then_cofactors, unknown.h/push_independent_factors, unknown.h/push_independent_terms, unknown.h/push_make_proper, unknown.h/push_nonconstant_factors, unknown.h/push_nonconstant_terms, unknown.h/push_nonnumeric_factors, unknown.h/push_poly_qr, unknown.h/push_reciprocal, unknown.h/push_standardize, unknown.h/raise_to_top, unknown.h/replace_top_with_post_simplified, unknown.h/replace_top2_with_pow, unknown.h/replace_top2_with_prod, unknown.h/replace_top2_with_ratio, unknown.h/replace_top2_with_sum, unknown.h/times_top
Out=min_quantum, timath.h/round14, unknown.h/estack_to_float, unknown.h/_bcd_math
