[Main]
Name=sprintf
Type=Function
Subtype=ROM Call
Header Files=stdio.h, string.h
Definition=short sprintf (char *buffer, const char *format, ...);
Attributes=__attribute__((__format__(__printf__,2,3)))

[ROM Call]
Index=$53

[Description]
Sends formatted output to a string.

[Explanation]
sprintf sends formatted output to a string. In fact, it does the following:
<UL>
<LI>accepts a series of arguments;</LI>
<LI>applies to each a format specifier contained in the format string pointed to by <I>format</I>;</LI>
<LI>outputs the formatted data to the string pointed to by <I>buffer</I>;</LI>
</UL>
sprintf applies the first format specifier to the first argument, the second
to the second, and so on. The format string, controls how sprintf will convert
and format its arguments. See <A HREF="$$LINK(printf)">printf</A> for more info about
format specifiers.
<BR><BR>
sprintf returns the number of bytes output, not including the terminating null
byte in the count.

[References]
In=printf_xy, alloc.h/HeapWalk, assert.h/assert, bascmd.h/cmd_cyclepic, bascmd.h/cmd_newdata, bascmd.h/cmd_showstat, bascmd.h/cmd_sinreg, error.h/ERD_dialog, error.h/ERD_process, estack.h/index_below_display_expression_aux, estack.h/Parse1DExpr, estack.h/Parse2DExpr, estack.h/Parse2DMultiExpr, events.h/ABT_dialog, events.h/EV_defaultHandler, events.h/handleVarLinkKey, gdraw.h/GR3_paint3d, homescr.h/HomeExecute, link.h/LIO_Receive, system.h/AB_prodid, system.h/AB_serno, unknown.h/EQU_getNameInfo, unknown.h/EV_quit, unknown.h/gr_de_axes_lbl, unknown.h/gr_DispLabels, unknown.h/GR3_addContours, unknown.h/GT_Trace, unknown.h/GZ_SetFactors, unknown.h/LIO_SendIdList, unknown.h/LOC_formatDate, unknown.h/OO_GetAttr, unknown.h/SP_Define, unknown.h/spike_in_editor, unknown.h/spike_titles_in_editor, vat.h/TempFolderName, unknown.h/_ROM_CALL_45B, unknown.h/_ROM_CALL_5F1, unknown.h/_ROM_CALL_5FE, unknown.h/_ROM_CALL_601
Out=string.h/strlen, system.h/XR_stringPtr, timath.h/is_transfinite, unknown.h/CTypeTable, unknown.h/_bcd_math, unknown.h/_du32u32, unknown.h/_mu32u32
